{"ast":null,"code":"var _jsxFileName = \"/Users/kelvin/Dev/mern/frontend/src/places/pages/NewPlaces.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/formUI/Input';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlaces = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    description: {\n      title: {\n        value: \"\",\n        isValid: false\n      }\n    }\n  });\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"input\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title\",\n    onInput: titleInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH()],\n    errorText: \"Please enter a valid description\",\n    onInput: titleInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default NewPlaces;","map":{"version":3,"sources":["/Users/kelvin/Dev/mern/frontend/src/places/pages/NewPlaces.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","NewPlaces","title","value","description","titleInputHandler","id","descriptionInputHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,WAAd,EAA2BC,UAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,8BAAvD;AACA,OAAO,gBAAP;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,UAAIC,WAAW,GAAG,IAAlB;;AAEA,WAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;AAClC,YAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAA+B;AAC7BD,UAAAA,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;AACD,SAFD,MAEK;AACHH,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;AACD;AACF;;AACD,aAAM,EAAN;;AACA;AACE,aAAON,KAAP;AAbN;AAeD,CAhBD;;AAkBA,MAAMO,SAAS,GAAG,MAAM;AAEtBZ,EAAAA,UAAU,CAACI,WAAD,EAAc;AACtBM,IAAAA,MAAM,EAAE;AACNG,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,EADF;AAELH,QAAAA,OAAO,EAAE;AAFJ;AADD,KADc;AAOtBI,IAAAA,WAAW,EAAE;AACXF,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,EADF;AAELH,QAAAA,OAAO,EAAE;AAFJ;AADI;AAPS,GAAd,CAAV;AAcA,QAAMK,iBAAiB,GAAGjB,WAAW,CAAC,CAACkB,EAAD,EAAIH,KAAJ,EAAUH,OAAV,KAAsB,CAG3D,CAHoC,EAGnC,EAHmC,CAArC;AAIA,QAAMO,uBAAuB,GAAGnB,WAAW,CAAC,CAACkB,EAAD,EAAIH,KAAJ,EAAUH,OAAV,KAAsB,CAGjE,CAH0C,EAGzC,EAHyC,CAA3C;AAKA,sBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,UAAU,EAAE,CAACR,iBAAiB,EAAlB,CALd;AAME,IAAA,SAAS,EAAC,4BANZ;AAOE,IAAA,OAAO,EAAEa,iBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,UAAU,EAAE,CAACd,mBAAmB,EAApB,CAJd;AAKE,IAAA,SAAS,EAAC,kCALZ;AAME,IAAA,OAAO,EAAEc,iBANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAqBD,CA9CD;;AAgDA,eAAeJ,SAAf","sourcesContent":["import React,{useCallback, useReducer} from 'react';\nimport Input from '../../shared/components/formUI/Input';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state,action) => {\n  switch (action.type){\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      \n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId){\n          formIsValid = formIsValid && action.isValid;\n        }else{\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return{};\n      default:\n        return state;\n  }\n};\n\nconst NewPlaces = () => {\n\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    description: {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n  });\n  const titleInputHandler = useCallback((id,value,isValid) => {\n\n\n  },[]);\n  const descriptionInputHandler = useCallback((id,value,isValid) => {\n\n\n  },[]);\n\n  return (\n    <form className=\"place-form\">\n      <Input\n        id=\"input\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title\"\n        onInput={titleInputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH()]}\n        errorText=\"Please enter a valid description\"\n        onInput={titleInputHandler}\n      />\n    </form>\n  );\n}\n\nexport default NewPlaces;"]},"metadata":{},"sourceType":"module"}