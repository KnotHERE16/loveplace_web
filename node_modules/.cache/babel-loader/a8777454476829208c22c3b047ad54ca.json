{"ast":null,"code":"var _jsxFileName = \"/Users/kelvin/Dev/mern/frontend/src/user/pages/Auth.js\";\nimport React, { useState } from \"react\";\nimport \"./Auth.css\";\nimport Card from \"../../shared/components/UIElement/Card/Card\";\nimport Input from \"../../shared/components/formUI/Input\";\nimport Button from \"../../shared/components/formUI/Button\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\n\nconst Auth = () => {\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  });\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"username\",\n    type: \"text\",\n    label: \"USER NAME\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"At least 5 characters\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, isLoginMode ? \"LOGIN\" : \"SIGNUP\")), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"SWITCH TO \", isLoginMode ? \"LOGIN\" : \"SIGNUP\"));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/kelvin/Dev/mern/frontend/src/user/pages/Auth.js"],"names":["React","useState","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","Auth","formState","inputHandler","setFormData","email","value","isValid","password","isLoginMode","setIsLoginMode","switchModeHandler","name","undefined","inputs","prevMode","authSubmitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Auth.css\";\n\nimport Card from \"../../shared/components/UIElement/Card/Card\";\nimport Input from \"../../shared/components/formUI/Input\";\nimport Button from \"../../shared/components/formUI/Button\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\n\nconst Auth = () => {\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false,\n    },\n\n    password: {\n      value: \"\",\n      isValid: false,\n    },\n  });\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        { name: undefined },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n  const authSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return (\n    <Card className=\"authentication\">\n      <h2>Login</h2>\n      <form onSubmit={authSubmitHandler}>\n        {!isLoginMode && (\n          <Input\n            element=\"input\"\n            id=\"username\"\n            type=\"text\"\n            label=\"USER NAME\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a name\"\n            onInput={inputHandler}\n          />\n        )}\n        <Input\n          element=\"input\"\n          id=\"email\"\n          type=\"email\"\n          label=\"E-Mail\"\n          validators={[VALIDATOR_EMAIL()]}\n          errorText=\"Please enter a valid email\"\n          onInput={inputHandler}\n        />\n\n        <Input\n          element=\"input\"\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"At least 5 characters\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n        </Button>\n      </form>\n\n      <Button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n      </Button>\n    </Card>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}