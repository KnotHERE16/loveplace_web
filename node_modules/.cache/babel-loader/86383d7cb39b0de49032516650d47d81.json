{"ast":null,"code":"var _jsxFileName = \"/Users/kelvin/Dev/mern/frontend/src/shared/components/formUI/Input.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport './Input.css';\nimport { validate } from '../../util/validators';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case 'TOUCH':\n      return { ...state,\n        isTouched: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isTouched: false,\n    isValid: false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(props.id, inputState.value, inputState.isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = event => {\n    dispatch({\n      type: 'TOUCH',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const element = props.element === \"input\" ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, props.label), element, !inputState.isValid && inputState.isTouched && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/kelvin/Dev/mern/frontend/src/shared/components/formUI/Input.js"],"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rows","label","errorText"],"mappings":"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","sourcesContent":["import React,{useReducer, useEffect } from 'react';\n\nimport './Input.css';\nimport { validate } from '../../util/validators';\nconst inputReducer = (state,action) => {\n     switch(action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val , action.validators)\n            };\n        case 'TOUCH': \n          return {\n            ...state,\n            isTouched:true\n          };\n        default:\n            return state;\n    }\n}\nconst Input = props => {\n\n    const [inputState, dispatch] = useReducer(inputReducer, {\n      value: \"\",\n      isTouched: false,\n      isValid: false,\n    });\n\n    const { id,onInput } = props;\n    const {value,isValid} = inputState;\n    useEffect(() => {\n      onInput(props.id, inputState.value, inputState.isValid);\n    }, [id, value, isValid, onInput]);\n\n    const changeHandler = event => {\n        dispatch({\n          type: \"CHANGE\",\n          val: event.target.value,\n          validators: props.validators,\n        });\n\n    };\n\n    const touchHandler = event => {\n      dispatch({\n        type: 'TOUCH',\n        val: event.target.value,\n        validators: props.validators\n      })\n    }\n    const element =\n      props.element === \"input\" ? (\n        <input\n          id={props.id}\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n        />\n      ) : (\n        <textarea\n          id={props.id}\n          rows={props.rows || 3}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n        ></textarea>\n      );\n\n   \n    return (\n      <div\n        className={`form-control ${\n          !inputState.isValid && inputState.isTouched && 'form-control--invalid'\n        }`}\n      >\n        <label htmlFor={props.id}>{props.label}</label>\n        {element}\n        {!inputState.isValid && inputState.isTouched && (\n          <p>{props.errorText}</p>\n        )}\n      </div>\n    );\n}\n\nexport default Input"]},"metadata":{},"sourceType":"module"}