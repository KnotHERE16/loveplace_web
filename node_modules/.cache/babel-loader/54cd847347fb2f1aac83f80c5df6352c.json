{"ast":null,"code":"var _jsxFileName = \"/Users/kelvin/Dev/mern/frontend/src/places/pages/UpdatePlace.js\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport Input from \"../../shared/components/formUI/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/formUI/Button\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Empire',\n  description: 'One of the most famoue city',\n  imageUrl: 'https://live.staticflickr.com/1513/26497574515_91182aa215_b.jpg',\n  address: '31 Jurong West Street 41, Singapore 649412',\n  location: {\n    lat: 123.000,\n    lng: 10.00\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Emhihie',\n  description: 'eat me baby',\n  imageUrl: 'https://live.staticflickr.com/1513/26497574515_91182aa215_b.jpg',\n  address: '31 Jurong West Street 41, Singapore 649412',\n  location: {\n    lat: 123.000,\n    lng: 10.00\n  },\n  creator: 'u2'\n}];\n\nconst UpdatePlace = () => {\n  const placeId = useParams().placeId;\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  useEffect(() => {\n    setFormData({\n      title: {\n        value: identifiedPlace.title,\n        isValid: true\n      },\n      description: {\n        value: identifiedPlace.description,\n        isValid: true\n      }\n    }, true);\n  }, [setFormData, identifiedPlace]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!identifiedPlace) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Could not find place!\"), \";\");\n  }\n\n  if (!formState.inputs.title.value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Loading\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    type: \"text\",\n    label: \"Title\",\n    element: \"input\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.title.value,\n    initialValid: formState.inputs.title.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description. min 5 char\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.description.value,\n    initialValid: formState.inputs.description.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 8\n    }\n  }, \"Submit\"));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["/Users/kelvin/Dev/mern/frontend/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","useParams","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Button","useForm","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","placeId","formState","inputHandler","setFormData","value","isValid","identifiedPlace","find","p","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams  } from \"react-router\";\nimport Input from \"../../shared/components/formUI/Input\";\nimport { VALIDATOR_REQUIRE,VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/formUI/Button\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nconst DUMMY_PLACES = [{\n    id : 'p1',\n    title : 'Empire',\n    description : 'One of the most famoue city',\n    imageUrl : 'https://live.staticflickr.com/1513/26497574515_91182aa215_b.jpg',\n    address : '31 Jurong West Street 41, Singapore 649412',\n    location : {\n        lat : 123.000,\n        lng : 10.00\n    },\n    creator : 'u1'\n},\n{\n    id : 'p2',\n    title : 'Emhihie',\n    description : 'eat me baby',\n    imageUrl : 'https://live.staticflickr.com/1513/26497574515_91182aa215_b.jpg',\n    address : '31 Jurong West Street 41, Singapore 649412',\n    location : {\n        lat : 123.000,\n        lng : 10.00\n    },\n    creator : 'u2'\n}];\n\n\nconst UpdatePlace = () => {\n  const placeId = useParams().placeId;\n\n  const [formState,inputHandler,setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\n\n  useEffect(() => {\n    setFormData(\n      {\n        title: {\n          value: identifiedPlace.title,\n          isValid: true,\n        },\n        description: {\n          value: identifiedPlace.description,\n          isValid: true,\n        },\n      },\n      true\n    );\n  }, [setFormData, identifiedPlace]);\n  \n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  }\n  if (!identifiedPlace) {\n    return (\n      <div className=\"center\">\n        <h2>Could not find place!</h2>;\n      </div>\n    );\n  }\n\n  if (!formState.inputs.title.value){\n    return (\n      <div className=\"center\">\n        <h2>Loading</h2>\n      </div>\n    )\n  }\n  return (\n    <form className='place-form' onSubmit={placeUpdateSubmitHandler}>\n      <Input\n        id=\"title\"\n        type=\"text\"\n        label=\"Title\"\n        element=\"input\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n        initialValue={formState.inputs.title.value}\n        initialValid={formState.inputs.title.isValid}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description. min 5 char\"\n        onInput={inputHandler}\n        initialValue={formState.inputs.description.value}\n        initialValid={formState.inputs.description.isValid}\n      />\n       <Button type=\"submit\" disabled={!formState.isValid}>\n           Submit\n       </Button>\n      \n    </form>\n  );\n}\n\nexport default UpdatePlace;"]},"metadata":{},"sourceType":"module"}